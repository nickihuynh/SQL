# The following query focuses on a dataset about customer and order data while including multiple tables in it. 

# 1. How many orders were placed in January? 
SELECT COUNT(orderID)
FROM bit_db.JanSales
WHERE length(orderID) = 6
AND orderID <>'Order ID';

#2. How many of those orders were for an iPhone? 
SELECT COUNT(orderID) as iphone_orders
from bit_db.JanSales
WHERE Product = 'iPhone'
AND length(orderID) = 6
AND orderID <>'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT distinct acctnum
SELECT distinct acctnum
FROM bit_db.FebSales f
JOIN bit_db.customers c
ON c.order_id=f.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT Product, MIN(price) as cheapest
FROM bit_db.JanSales
GROUP BY Product
ORDER BY cheapest asc
LIMIT 1;

#5. What is the total revenue for each product sold in January?
SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity) as products_sold,
SUM(Quantity)*price as revenue
FROM bit_db.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT count(distinct c.acctnum) as customers,
AVG(quantity)*price as avg_rev
FROM bit_db.FebSales f
JOIN bit_db.customers c
ON f.orderID = c.order_id
WHERE Quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID';
