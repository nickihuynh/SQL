# For this project, I downloaded Spotify data from Kaggle.
# I created a table to insert Spotify data into and perfromed analytics on the data using SQL.

# Create the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,

# Insert Spotify Data. cvs into the table.

# Analysis

# What are the top 10 songs with the highest popularity?
SELECT track_name, popularity
FROM bit_db.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

# Which songs contained instrumental parts in the dataset?
SELECT track_name,
CASE WHEN 
instrumentalness = 0 then 'No'
ELSE 'Yes'
END AS songs_instru
FROM bit_db.Spotifydata
WHERE songs_instru = 'Yes';

# How many songs on spotify does Justin Beiber have?
SELECT COUNT(artist_name) as jb_songs
FROM bit_db.Spotifydata
WHERE artist_name = 'Justin Bieber';

# Which artist perfromed te longest song?
SELECT artist_name, duration_ms
FROM bit_db.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

# What is the average danceability for artist and track? and which has the lowest danceability average?
SELECT artist_name, track_name, AVG(danceability) as avg_dance
FROM bit_db.Spotifydata
GROUP BY artist_name, track_name
ORDER BY avg_dance asc;

